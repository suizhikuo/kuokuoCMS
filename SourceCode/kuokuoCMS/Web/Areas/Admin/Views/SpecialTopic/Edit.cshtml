@model Model.SpecialTopic

@{
    ViewBag.Title = "Edit";
    Layout = "~/Areas/Admin/Views/Shared/_Layout.cshtml";
}

<h2>Edit</h2>

@using (Html.BeginForm()) {
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true)

    <fieldset class="form-horizontal">
        <legend>SpecialTopic</legend>

        @Html.HiddenFor(model => model.ID)

        <div class="control-group">
            @Html.LabelFor(model => model.ParentSpecialTopicID, "SpecialTopic2", new { @class = "control-label" })
			<div class="controls">
				@Html.DropDownList("ParentSpecialTopicID", String.Empty)
				@Html.ValidationMessageFor(model => model.ParentSpecialTopicID, null, new { @class = "help-inline" })
			</div>
		</div>

        <div class="control-group">
            @Html.LabelFor(model => model.SpecialTopicTypeID, "SpecialTopicTypDictionary", new { @class = "control-label" })
			<div class="controls">
				@Html.DropDownList("SpecialTopicTypeID", String.Empty)
				@Html.ValidationMessageFor(model => model.SpecialTopicTypeID, null, new { @class = "help-inline" })
			</div>
		</div>

        <div class="control-group">
            @Html.LabelFor(model => model.Name, new { @class = "control-label" })
			<div class="controls">
				@Html.EditorFor(model => model.Name)
				@Html.ValidationMessageFor(model => model.Name, null, new { @class = "help-inline" })
			</div>
		</div>

        <div class="control-group">
            @Html.LabelFor(model => model.Description, new { @class = "control-label" })
			<div class="controls">
				@Html.EditorFor(model => model.Description)
				@Html.ValidationMessageFor(model => model.Description, null, new { @class = "help-inline" })
			</div>
		</div>

        <div class="control-group">
            @Html.LabelFor(model => model.IsDispaly, new { @class = "control-label" })
			<div class="controls">
				@Html.EditorFor(model => model.IsDispaly)
				@Html.ValidationMessageFor(model => model.IsDispaly, null, new { @class = "help-inline" })
			</div>
		</div>

        <div class="control-group">
            @Html.LabelFor(model => model.SortNumber, new { @class = "control-label" })
			<div class="controls">
				@Html.EditorFor(model => model.SortNumber)
				@Html.ValidationMessageFor(model => model.SortNumber, null, new { @class = "help-inline" })
			</div>
		</div>

        <div class="control-group">
            @Html.LabelFor(model => model.CreateUser, new { @class = "control-label" })
			<div class="controls">
				@Html.EditorFor(model => model.CreateUser)
				@Html.ValidationMessageFor(model => model.CreateUser, null, new { @class = "help-inline" })
			</div>
		</div>

        <div class="control-group">
            @Html.LabelFor(model => model.CreateDatetime, new { @class = "control-label" })
			<div class="controls">
				@Html.EditorFor(model => model.CreateDatetime)
				@Html.ValidationMessageFor(model => model.CreateDatetime, null, new { @class = "help-inline" })
			</div>
		</div>

        <div class="control-group">
            @Html.LabelFor(model => model.LastUpdateUser, new { @class = "control-label" })
			<div class="controls">
				@Html.EditorFor(model => model.LastUpdateUser)
				@Html.ValidationMessageFor(model => model.LastUpdateUser, null, new { @class = "help-inline" })
			</div>
		</div>

        <div class="control-group">
            @Html.LabelFor(model => model.LastUpdateDatetime, new { @class = "control-label" })
			<div class="controls">
				@Html.EditorFor(model => model.LastUpdateDatetime)
				@Html.ValidationMessageFor(model => model.LastUpdateDatetime, null, new { @class = "help-inline" })
			</div>
		</div>

        <div class="form-actions no-color">
            <input type="submit" value="Save" class="btn" />
        </div>
    </fieldset>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}

